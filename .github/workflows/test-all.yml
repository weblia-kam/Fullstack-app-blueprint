name: Test All

on:
  workflow_dispatch: {}

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      JWT_SECRET: test-secret
      COOKIE_SECRET: test-cookie
      ENCRYPTION_KEY: test-encryption
      API_CORS_ORIGINS: http://localhost:3000
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb?schema=public
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run API unit tests
        run: pnpm --filter ./apps/api test
      - name: Upload unit coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-unit
          path: apps/api/coverage/unit

  contract:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      JWT_SECRET: test-secret
      COOKIE_SECRET: test-cookie
      ENCRYPTION_KEY: test-encryption
      API_CORS_ORIGINS: http://localhost:3000
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb?schema=public
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run OpenAPI contract tests
        run: pnpm --filter ./apps/api test:contract

  e2e-web:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      JWT_SECRET: test-secret
      COOKIE_SECRET: test-cookie
      ENCRYPTION_KEY: test-encryption
      API_CORS_ORIGINS: http://localhost:3000
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb?schema=public
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Install Playwright browsers
        run: pnpm --filter ./apps/web exec playwright install --with-deps
      - name: Build and start web app
        run: pnpm --filter ./apps/web build && pnpm --filter ./apps/web start &
        shell: bash
      - name: Wait for web app
        run: npx wait-on http://localhost:3000
      - name: Run web E2E tests
        env:
          PLAYWRIGHT_API_ORIGIN: http://localhost:4000
        run: pnpm --filter ./apps/web test:e2e
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/web/playwright-report

  e2e-mobile:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      JWT_SECRET: test-secret
      COOKIE_SECRET: test-cookie
      ENCRYPTION_KEY: test-encryption
      API_CORS_ORIGINS: http://localhost:3000
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb?schema=public
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
      - name: Flutter version
        run: flutter --version
      - name: Install Dart dependencies
        run: flutter pub get
        working-directory: apps/mobile
      - name: Run Flutter tests
        run: flutter test
        working-directory: apps/mobile
