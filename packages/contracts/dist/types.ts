/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v1/health": {
    /** Health check */
    get: operations["health"];
  };
  "/api/v1/auth/request-magic-link": {
    /** Request a magic login link */
    post: operations["requestMagicLink"];
  };
  "/api/v1/auth/verify-magic-link": {
    /** Verify a magic login link */
    post: operations["verifyMagicLink"];
  };
  "/api/v1/auth/refresh": {
    /** Refresh access token */
    post: operations["refreshTokens"];
  };
  "/api/v1/auth/logout": {
    /** Logout current session */
    post: operations["logout"];
  };
  "/api/v1/auth/register": {
    /** Register a new user */
    post: operations["register"];
  };
  "/api/v1/auth/login": {
    /** Login with credentials */
    post: operations["login"];
  };
  "/api/v1/me": {
    /** Get current user profile */
    get: operations["getMe"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    MagicLinkResponse: {
      ok: boolean;
    };
    TokenPairResponse: {
      ok: boolean;
      accessToken: string;
      refreshToken: string;
    };
    UserProfile: {
      id: string;
      /** Format: email */
      email: string;
      phone: string | null;
      firstName: string | null;
      lastName: string | null;
      birthDate: string | null;
      displayName: string | null;
      /** Format: date-time */
      createdAt: string;
      role: string;
    };
    MeResponse: {
      user: components["schemas"]["UserProfile"];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Health check */
  health: {
    responses: {
      /** @description Health status */
      200: {
        content: {
          "application/json": {
            ok: boolean;
            service: string;
            version: string;
          };
        };
      };
    };
  };
  /** Request a magic login link */
  requestMagicLink: {
    requestBody: {
      content: {
        "application/json": {
          /** Format: email */
          email: string;
        };
      };
    };
    responses: {
      /** @description Magic link dispatched */
      201: {
        content: {
          "application/json": components["schemas"]["MagicLinkResponse"];
        };
      };
    };
  };
  /** Verify a magic login link */
  verifyMagicLink: {
    requestBody: {
      content: {
        "application/json": {
          /** Format: email */
          email: string;
          token: string;
        };
      };
    };
    responses: {
      /** @description Tokens issued */
      201: {
        content: {
          "application/json": components["schemas"]["TokenPairResponse"];
        };
      };
    };
  };
  /** Refresh access token */
  refreshTokens: {
    responses: {
      /** @description Tokens rotated */
      201: {
        content: {
          "application/json": components["schemas"]["TokenPairResponse"];
        };
      };
      /** @description Missing refresh token */
      401: {
        content: never;
      };
    };
  };
  /** Logout current session */
  logout: {
    responses: {
      /** @description Logged out */
      204: {
        content: never;
      };
    };
  };
  /** Register a new user */
  register: {
    requestBody: {
      content: {
        "application/json": {
          firstName: string;
          lastName: string;
          /** Format: email */
          email: string;
          phone?: string | null;
          birthDate?: string | null;
          password: string;
          acceptedTerms: boolean;
        };
      };
    };
    responses: {
      /** @description User registered */
      201: {
        content: {
          "application/json": components["schemas"]["TokenPairResponse"];
        };
      };
    };
  };
  /** Login with credentials */
  login: {
    requestBody: {
      content: {
        "application/json": {
          identifier: string;
          password: string;
        };
      };
    };
    responses: {
      /** @description User authenticated */
      201: {
        content: {
          "application/json": components["schemas"]["TokenPairResponse"];
        };
      };
      /** @description Invalid credentials */
      401: {
        content: never;
      };
    };
  };
  /** Get current user profile */
  getMe: {
    responses: {
      /** @description Current user */
      200: {
        content: {
          "application/json": components["schemas"]["MeResponse"];
        };
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
    };
  };
}
